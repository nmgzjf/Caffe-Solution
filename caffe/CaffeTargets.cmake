# Generated by CMake 3.4.0-rc2

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget caffe proto)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target caffe
add_library(caffe SHARED IMPORTED)

# Create imported target proto
add_library(proto STATIC IMPORTED)

# Import target "caffe" for configuration "Debug"
set_property(TARGET caffe APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(caffe PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/SoftwareDK/Caffe-Windows/caffe/lib/Debug/caffe-d.lib"
  IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG "proto;proto;D:/SoftwareDK/3rdparty/Boost-1.58.0/lib64-msvc-12.0/boost_system-vc120-mt-gd-1_58.lib;D:/SoftwareDK/3rdparty/Boost-1.58.0/lib64-msvc-12.0/boost_thread-vc120-mt-gd-1_58.lib;D:/SoftwareDK/3rdparty/glog/x64/Debug/libglog.lib;D:/SoftwareDK/3rdparty/gflags/bin/lib/Debug/gflags.lib;D:/SoftwareDK/3rdparty/protobuf/cmake/build/Debug/libprotobuf.lib;D:/SoftwareDK/3rdparty/hdf5/build/bin/Debug/libhdf5_hl_D.lib;D:/SoftwareDK/3rdparty/liblmdb/x64/Release/lmdb.lib;D:/SoftwareDK/3rdparty/leveldb/build/Release/leveldb.lib;D:/SoftwareDK/3rdparty/snappy/snappy-msvc/x64/Release/snappy.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/lib/x64/cudart.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/lib/x64/curand.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/lib/x64/cublas.lib;D:/SoftwareDK/3rdparty/cuda/lib/x64/cudnn.lib;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;D:/SoftwareDK/3rdparty/OpenBLAS/lib/libopenblas.a;C:/Users/Jianfeng/Anaconda/libs/python27.lib;D:/SoftwareDK/3rdparty/Boost-1.58.0/lib64-msvc-12.0/boost_python-vc120-mt-gd-1_58.lib"
  IMPORTED_LOCATION_DEBUG "D:/SoftwareDK/Caffe-Windows/caffe/bin/Debug/caffe-d.dll"
  )

# Import target "proto" for configuration "Debug"
set_property(TARGET proto APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(proto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "D:/SoftwareDK/Caffe-Windows/caffe/lib/Debug/proto-d.lib"
  )

# Import target "caffe" for configuration "Release"
set_property(TARGET caffe APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(caffe PROPERTIES
  IMPORTED_IMPLIB_RELEASE "D:/SoftwareDK/Caffe-Windows/caffe/lib/Release/caffe.lib"
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "proto;proto;D:/SoftwareDK/3rdparty/Boost-1.58.0/lib64-msvc-12.0/boost_system-vc120-mt-1_58.lib;D:/SoftwareDK/3rdparty/Boost-1.58.0/lib64-msvc-12.0/boost_thread-vc120-mt-1_58.lib;D:/SoftwareDK/3rdparty/glog/x64/Release/libglog.lib;D:/SoftwareDK/3rdparty/gflags/bin/lib/Release/gflags.lib;D:/SoftwareDK/3rdparty/protobuf/cmake/build/Release/libprotobuf.lib;D:/SoftwareDK/3rdparty/hdf5/build/bin/Debug/libhdf5_hl_D.lib;D:/SoftwareDK/3rdparty/liblmdb/x64/Release/lmdb.lib;D:/SoftwareDK/3rdparty/leveldb/build/Release/leveldb.lib;D:/SoftwareDK/3rdparty/snappy/snappy-msvc/x64/Release/snappy.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/lib/x64/cudart.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/lib/x64/curand.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/lib/x64/cublas.lib;D:/SoftwareDK/3rdparty/cuda/lib/x64/cudnn.lib;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;D:/SoftwareDK/3rdparty/OpenBLAS/lib/libopenblas.a;C:/Users/Jianfeng/Anaconda/libs/python27.lib;D:/SoftwareDK/3rdparty/Boost-1.58.0/lib64-msvc-12.0/boost_python-vc120-mt-1_58.lib"
  IMPORTED_LOCATION_RELEASE "D:/SoftwareDK/Caffe-Windows/caffe/bin/Release/caffe.dll"
  )

# Import target "proto" for configuration "Release"
set_property(TARGET proto APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(proto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "D:/SoftwareDK/Caffe-Windows/caffe/lib/Release/proto.lib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
